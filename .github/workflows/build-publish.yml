name: Build

env:
  module_id: hollywood
  qmodName: Hollywood

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - 'version*'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: true
          lfs: true

      - uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Create ndkpath.txt
        run: |
          echo "$ANDROID_NDK_LATEST_HOME" > ${GITHUB_WORKSPACE}/ndkpath.txt
          cat ${GITHUB_WORKSPACE}/ndkpath.txt

      - name: QPM Action
        uses: Fernthedev/qpm-action@main
        with:
          workflow_token: ${{ secrets.GITHUB_TOKEN }}

          restore: true
          cache: true

          publish: false

      - name: List Post Restore
        run: |
          echo includes:
          ls -la ${GITHUB_WORKSPACE}/extern/includes
          echo libs:
          ls -la ${GITHUB_WORKSPACE}/extern/libs

      - name: Cache FFMPEG
        id: cache-ffmpeg
        uses: actions/cache@v3
        with:
          path: ffmpeg
          key: ${{ hashFiles('**/update_ffmpeg.py') }}

      - name: Get FFMPEG
        if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
        run: |
          cd ${GITHUB_WORKSPACE}
          pip install PyGithub
          pip install requests
          python3 ./update_ffmpeg.py

      - name: Build
        run: |
          cd ${GITHUB_WORKSPACE}
          pwsh -Command ./build.ps1

      - name: Get Library Name
        id: libname
        run: |
          cd ./build/
          pattern="lib${module_id}*.so"
          files=( $pattern )
          echo NAME="${files[0]}" >> $GITHUB_OUTPUT

      - name: Upload non-debug artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.libname.outputs.NAME }}
          path: ./build/${{ steps.libname.outputs.NAME }}
          if-no-files-found: error

      - name: Rename debug
        if: github.event_name != 'pull_request' && steps.commit-regex.outputs.match != ''
        run: |
          mv ./build/debug/${{ steps.libname.outputs.NAME }} ./build/debug/debug_${{ steps.libname.outputs.NAME }}

      - name: Create qmod
        if: github.event_name != 'pull_request' && steps.commit-regex.outputs.match != ''
        run: |
          pwsh -Command ./createqmod.ps1 ${{env.qmodName}}

      - name: Upload debug artifact
        uses: actions/upload-artifact@v2
        with:
          name: debug_${{ steps.libname.outputs.NAME }}
          path: ./build/debug/debug_${{ steps.libname.outputs.NAME }}
          if-no-files-found: error

      - name: Upload qmod artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.qmodName }}.qmod
          path: ./${{ env.qmodName }}.qmod
          if-no-files-found: error
